// (c) Copyright 2021 Christian Saide
// SPDX-License-Identifier: GPL-3.0

syntax = "proto3";

import "google/protobuf/timestamp.proto";

package kv;

// A key represents a single unique entry within the larger KV namespace.
message Key {
    // The key encode as binary.
    bytes key = 1;
}

// A value represents the actual binary data associated with a given Key.
message Value {
    // This values key encoded as binary.
    bytes key = 1;
    // This value encoded as binary.
    bytes value = 2;
    // The timestamp of when this [Value] was created.
    google.protobuf.Timestamp created = 3;
    // The timestamp of when this [Value] was last updated.
    google.protobuf.Timestamp updated = 4;
}

// A key value object represents a new value to set at the given key.
message KeyValue {
    // The ttl of this KeyValue, set to 0 for a persistent KV.
    uint64 ttl = 1;
    // The key representing this value, encoded as binary.
    bytes key = 2;
    // The value encoded as binary.
    bytes value = 3;
}

service KV {
    rpc Set(KeyValue) returns (Value);
    rpc Get(Key) returns (Value);
    rpc Delete(Key) returns (Value);
}
